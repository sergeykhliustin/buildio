//
// V0PagingResponseModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct V0PagingResponseModel: Codable, Sendable {

    /** Next is the \"anchor\" for pagination. This value should be passed to the same endpoint to get the next page. Empty/not included if there's no \"next\" page. Stop paging when there's no \"Next\" item in the response! */
    public let next: String?
    /** PageItemLimit - per-page item count. A given page might include less items if there's not enough items. This value is the \"max item count per page\". */
    public let pageItemLimit: Int?
    /** TotalItemCount - total item count, through \"all pages\" */
    public let totalItemCount: Int?

    public init(next: String? = nil, pageItemLimit: Int? = nil, totalItemCount: Int? = nil) {
        self.next = next
        self.pageItemLimit = pageItemLimit
        self.totalItemCount = totalItemCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case next
        case pageItemLimit = "page_item_limit"
        case totalItemCount = "total_item_count"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(next, forKey: .next)
        try container.encodeIfPresent(pageItemLimit, forKey: .pageItemLimit)
        try container.encodeIfPresent(totalItemCount, forKey: .totalItemCount)
    }
    
    public static func empty() -> Self {
        return V0PagingResponseModel(next: nil, pageItemLimit: nil, totalItemCount: nil)
    }
}
