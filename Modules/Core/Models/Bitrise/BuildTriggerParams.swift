//
// BuildTriggerParams.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public typealias BuildTriggerParamsBuildParams = [String: JSONValue]

public struct BuildTriggerParams: Codable {

    public let buildParams: BuildTriggerParamsBuildParams?
    public let hookInfo: V0BuildTriggerParamsHookInfo?
    
    public init(build: BuildResponseItemModel) {
        self.buildParams = build.originalBuildParams
        self.hookInfo = V0BuildTriggerParamsHookInfo()
    }
    
    public init(branch: String, workflowId: String, commitMessage: String? = nil) {
        var buildParams: BuildTriggerParamsBuildParams = [
            "branch": .string(branch),
            "workflow_id": .string(workflowId)
        ]
        if let commitMessage = commitMessage, !commitMessage.isEmpty {
            buildParams["commit_message"] = .string(commitMessage)
        }
        self.buildParams = buildParams
        self.hookInfo = V0BuildTriggerParamsHookInfo()
    }

    public init(buildParams: BuildTriggerParamsBuildParams? = nil, hookInfo: V0BuildTriggerParamsHookInfo? = nil) {
        self.buildParams = buildParams
        self.hookInfo = hookInfo
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case buildParams = "build_params"
        case hookInfo = "hook_info"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(buildParams, forKey: .buildParams)
        try container.encodeIfPresent(hookInfo, forKey: .hookInfo)
    }
}
